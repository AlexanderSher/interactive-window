<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AlreadyInitialized" xml:space="preserve">
    <value>대화형 창이 이미 초기화되었습니다.</value>
  </data>
  <data name="AltDownArrowHelp" xml:space="preserve">
    <value>현재 제출을 이후 제출로 바꿉니다(미리 뒤로 이동한 후).</value>
  </data>
  <data name="AltUpArrowHelp" xml:space="preserve">
    <value>현재 제출을 이전 제출로 바꿉니다.</value>
  </data>
  <data name="ClearScreenCommandDescription" xml:space="preserve">
    <value>기록과 실행 컨텍스트는 그대로 두고 편집기 창의 내용을 지웁니다.</value>
  </data>
  <data name="CommandFailed" xml:space="preserve">
    <value>'{0}' 명령 실패: {1}</value>
  </data>
  <data name="CommandNamePlaceholder" xml:space="preserve">
    <value>[command-name]</value>
  </data>
  <data name="CtrlAHelp" xml:space="preserve">
    <value>처음 누르기, 커서가 포함된 제출을 선택합니다. 두 번째 누르기, 창의 모든 텍스트를 선택합니다.</value>
  </data>
  <data name="CtrlAltDownArrowHelp" xml:space="preserve">
    <value>현재 제출을 동일한 텍스트로 시작하는 이후 제출로 바꿉니다(미리 뒤로 이동한 후).</value>
  </data>
  <data name="CtrlAltUpArrowHelp" xml:space="preserve">
    <value>현재 제출을 동일한 텍스트로 시작하는 이전 제출로 바꿉니다.</value>
  </data>
  <data name="CtrlECtrlEnterHelp" xml:space="preserve">
    <value>대화형 버퍼의 보류 중인 입력 앞에 선택 항목을 붙여 넣고 실행합니다.</value>
  </data>
  <data name="CtrlEnterHelp1" xml:space="preserve">
    <value>현재 제출 내에서 현재 제출을 평가합니다.</value>
  </data>
  <data name="CtrlEnterHelp2" xml:space="preserve">
    <value>이전 제출 내에서 이전 제출을 현재 제출에 추가합니다.</value>
  </data>
  <data name="CtrlKCtrlEnterHelp" xml:space="preserve">
    <value>대화형 버퍼의 끝에 선택 항목을 붙여 넣고 입력의 끝에 캐럿을 둡니다.</value>
  </data>
  <data name="DownArrowHelp1" xml:space="preserve">
    <value>현재 제출의 끝에서 현재 제출을 이후 제출로 바꿉니다(이전에 뒤로 이동한 후).</value>
  </data>
  <data name="DownArrowHelp2" xml:space="preserve">
    <value>다른 곳에서 커서를 한 줄 아래로 이동합니다.</value>
  </data>
  <data name="DuplicateCommand" xml:space="preserve">
    <value>이름이 '{0}'인 명령은 이미 등록되었습니다.</value>
  </data>
  <data name="EnterHelp" xml:space="preserve">
    <value>현재 제출이 완성된 것 같으면 평가하고, 그렇지 않으면 새 줄을 삽입합니다.</value>
  </data>
  <data name="EscapeHelp" xml:space="preserve">
    <value>현재 제출을 지웁니다.</value>
  </data>
  <data name="HelpCommandDescription" xml:space="preserve">
    <value>지정된 명령 또는 지정되지 않은 경우에는 사용 가능한 모든 명령과 키 바인딩에 대한 도움말을 표시합니다.</value>
  </data>
  <data name="InternalError" xml:space="preserve">
    <value>대화형 창에서 내부 오류가 발생했습니다. Visual Studio를 다시 시작하세요.</value>
  </data>
  <data name="KeyboardShortcuts" xml:space="preserve">
    <value>바로 가기 키:</value>
  </data>
  <data name="MissingCommandName" xml:space="preserve">
    <value>'{0}' 형식의 명령에 명령 이름이 없습니다.</value>
  </data>
  <data name="NotInitialized" xml:space="preserve">
    <value>대화형 창이 아직 초기화되지 않았습니다.</value>
  </data>
  <data name="IsResetting" xml:space="preserve">
    <value>대화형 창을 재설정하는 중입니다.</value>
  </data>
  <data name="Parameters" xml:space="preserve">
    <value>매개 변수:</value>
  </data>
  <data name="ReplCommands" xml:space="preserve">
    <value>REPL 명령:</value>
  </data>
  <data name="RequireNonUIThread" xml:space="preserve">
    <value>이 메서드는 UI 스레드에서 호출될 수 없습니다(중단을 방지하기 위해).</value>
  </data>
  <data name="RequireUIThread" xml:space="preserve">
    <value>이 메서드는 UI 스레드에서만 호출될 수 있습니다.</value>
  </data>
  <data name="ResetCommandDescription" xml:space="preserve">
    <value>실행 환경을 초기 상태로 다시 설정하고 기록을 보관합니다.</value>
  </data>
  <data name="ResetCommandParametersDescription" xml:space="preserve">
    <value>정리된 환경(mscorlib만 참조됨)으로 다시 설정하고 초기화 스크립트를 실행하지 않습니다.</value>
  </data>
  <data name="ShiftEnterHelp" xml:space="preserve">
    <value>새 줄을 삽입합니다.</value>
  </data>
  <data name="UnknownCommand" xml:space="preserve">
    <value>'{0}'은(는) 알 수 없는 명령입니다.</value>
  </data>
  <data name="UpArrowHelp1" xml:space="preserve">
    <value>현재 제출의 끝에서 현재 제출을 이전 제출로 바꿉니다.</value>
  </data>
  <data name="UpArrowHelp2" xml:space="preserve">
    <value>다른 곳에서 커서를 한 줄 위로 이동합니다.</value>
  </data>
  <data name="Usage" xml:space="preserve">
    <value>사용법:</value>
  </data>
  <data name="WaitTitle" xml:space="preserve">
    <value>복사</value>
  </data>
  <data name="WaitMessage" xml:space="preserve">
    <value>선택 항목에서 서식 있는 텍스트 표현을 생성하는 중입니다.</value>
  </data>
  <data name="Backspace" xml:space="preserve">
    <value>왼쪽 문자 삭제</value>
  </data>
  <data name="BreakLine" xml:space="preserve">
    <value>새 줄 삽입</value>
  </data>
  <data name="Paste" xml:space="preserve">
    <value>붙여넣기</value>
  </data>
  <data name="Cut" xml:space="preserve">
    <value>선택 영역 잘라내기</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>텍스트 삭제</value>
  </data>
  <data name="CutLine" xml:space="preserve">
    <value>줄 잘라내기</value>
  </data>
  <data name="DeleteLine" xml:space="preserve">
    <value>줄 삭제</value>
  </data>
  <data name="TypeChar" xml:space="preserve">
    <value>텍스트 삽입</value>
  </data>
  <data name="CSVBScriptDirectives" xml:space="preserve">
    <value>스크립트 지시문:</value>
  </data>
  <data name="RefHelp" xml:space="preserve">
    <value>지정한 어셈블리 및 모든 해당 종속성에 대한 메타데이터 참조를 추가합니다(예: #r "myLib.dll").</value>
  </data>
  <data name="LoadHelp" xml:space="preserve">
    <value>지정한 스크립트 파일을 로드하고 실행합니다(예: #load "myScript.csx").</value>
  </data>
</root>