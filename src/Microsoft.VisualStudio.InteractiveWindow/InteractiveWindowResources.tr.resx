<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AlreadyInitialized" xml:space="preserve">
    <value>Etkileşimli pencere daha önce başlatıldı.</value>
  </data>
  <data name="AltDownArrowHelp" xml:space="preserve">
    <value>Geçerli gönderimi sonraki bir gönderimle değiştir (daha önce geriye gittikten sonra).</value>
  </data>
  <data name="AltUpArrowHelp" xml:space="preserve">
    <value>Geçerli gönderimi önceki bir gönderimle değiştir.</value>
  </data>
  <data name="ClearScreenCommandDescription" xml:space="preserve">
    <value>Geçmişe ve yürütme bağlamına dokunmadan düzenleyici penceresinin içeriğini siler.</value>
  </data>
  <data name="CommandFailed" xml:space="preserve">
    <value>'{0}' komutu başarısız oldu: {1}</value>
  </data>
  <data name="CommandNamePlaceholder" xml:space="preserve">
    <value>[komut-adı]</value>
  </data>
  <data name="CtrlAHelp" xml:space="preserve">
    <value>İlk basmada imleci içeren gönderimi seçer. İkinci basmada penceredeki tüm metni seçer.</value>
  </data>
  <data name="CtrlAltDownArrowHelp" xml:space="preserve">
    <value>Geçerli gönderimi aynı metinle başlayan sonraki bir gönderimle değiştir (daha önce geriye gittikten sonra).</value>
  </data>
  <data name="CtrlAltUpArrowHelp" xml:space="preserve">
    <value>Geçerli gönderimi aynı metinle başlayan önceki bir gönderimle değiştir.</value>
  </data>
  <data name="CtrlECtrlEnterHelp" xml:space="preserve">
    <value>Etkileşimli arabellekte bekleyen girişlerden önce seçimi yapıştırın ve yürütün.</value>
  </data>
  <data name="CtrlEnterHelp1" xml:space="preserve">
    <value>Geçerli gönderim içinde, geçerli gönderimi değerlendirin.</value>
  </data>
  <data name="CtrlEnterHelp2" xml:space="preserve">
    <value>Önceki bir gönderim içinde, önceki gönderimi geçerli gönderime ekleyin.</value>
  </data>
  <data name="CtrlKCtrlEnterHelp" xml:space="preserve">
    <value>Etkileşimli arabelleğin sonunda seçimi yapıştırın, girişin sonuna bir şapka işareti koyun.</value>
  </data>
  <data name="DownArrowHelp1" xml:space="preserve">
    <value>Geçerli gönderimin sonunda, geçerli gönderimi sonraki bir gönderimle değiştirin (daha önce geriye gittikten sonra).</value>
  </data>
  <data name="DownArrowHelp2" xml:space="preserve">
    <value>Diğer yerlerde, imleci bir satır aşağı taşıyın.</value>
  </data>
  <data name="DuplicateCommand" xml:space="preserve">
    <value>'{0}' adlı bir komut daha önce kaydedildi.</value>
  </data>
  <data name="EnterHelp" xml:space="preserve">
    <value>Geçerli gönderim tamamlanmış görünüyorsa değerlendirin. Aksi takdirde, yeni bir satır ekleyin.</value>
  </data>
  <data name="EscapeHelp" xml:space="preserve">
    <value>Geçerli gönderimi silin.</value>
  </data>
  <data name="HelpCommandDescription" xml:space="preserve">
    <value>Belirtilen komutla veya hiçbiri belirtilmemişse tüm kullanılabilir komutlarla ve anahtar bağlamalarıyla ilgili yardımı görüntüleyin.</value>
  </data>
  <data name="InternalError" xml:space="preserve">
    <value>Interactive penceresinde bir iç hata oluştu. Lütfen Visual Studio'yu yeniden başlatın.</value>
  </data>
  <data name="KeyboardShortcuts" xml:space="preserve">
    <value>Klavye kısayolları:</value>
  </data>
  <data name="MissingCommandName" xml:space="preserve">
    <value>'{0}' türündeki komutun komut adı yok.</value>
  </data>
  <data name="NotInitialized" xml:space="preserve">
    <value>Etkileşimli pencere henüz başlatılmadı.</value>
  </data>
  <data name="IsResetting" xml:space="preserve">
    <value>Etkileşimli pencere sıfırlanıyor.</value>
  </data>
  <data name="Parameters" xml:space="preserve">
    <value>Parametreler:</value>
  </data>
  <data name="ReplCommands" xml:space="preserve">
    <value>REPL komutları:</value>
  </data>
  <data name="RequireNonUIThread" xml:space="preserve">
    <value>Bu metot UI iş parçacığında çağrılamaz (askıda kalmaları önlemek için).</value>
  </data>
  <data name="RequireUIThread" xml:space="preserve">
    <value>Bu metot yalnızca UI iş parçacığında çağrılabilir.</value>
  </data>
  <data name="ResetCommandDescription" xml:space="preserve">
    <value>Yürütme ortamını ilk durumuna sıfırlayın, geçmişi saklayın.</value>
  </data>
  <data name="ResetCommandParametersDescription" xml:space="preserve">
    <value>Temiz bir ortama sıfırlayın (yalnızca mscorlib öğesine başvurulur), başlatma betiğini çalıştırmayın.</value>
  </data>
  <data name="ShiftEnterHelp" xml:space="preserve">
    <value>Yeni bir satır ekleyin.</value>
  </data>
  <data name="UnknownCommand" xml:space="preserve">
    <value>Bilinmeyen komut '{0}'</value>
  </data>
  <data name="UpArrowHelp1" xml:space="preserve">
    <value>Geçerli gönderimin sonunda, geçerli gönderimi önceki bir gönderimle değiştirin.</value>
  </data>
  <data name="UpArrowHelp2" xml:space="preserve">
    <value>Diğer yerlerde, imleci bir satır yukarı taşıyın.</value>
  </data>
  <data name="Usage" xml:space="preserve">
    <value>Kullanım:</value>
  </data>
  <data name="WaitTitle" xml:space="preserve">
    <value>Kopyala</value>
  </data>
  <data name="WaitMessage" xml:space="preserve">
    <value>Seçimden Zengin Metin Biçimi gösterimi oluşturuluyor.</value>
  </data>
  <data name="Backspace" xml:space="preserve">
    <value>Sola Doğru Karakter Sil</value>
  </data>
  <data name="BreakLine" xml:space="preserve">
    <value>Yeni Satır Ekle</value>
  </data>
  <data name="Paste" xml:space="preserve">
    <value>Yapıştır</value>
  </data>
  <data name="Cut" xml:space="preserve">
    <value>Seçimi Kes</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Metni Sil</value>
  </data>
  <data name="CutLine" xml:space="preserve">
    <value>Satırı Kes</value>
  </data>
  <data name="DeleteLine" xml:space="preserve">
    <value>Satırı Sil</value>
  </data>
  <data name="TypeChar" xml:space="preserve">
    <value>Metin Ekle</value>
  </data>
  <data name="CSVBScriptDirectives" xml:space="preserve">
    <value>Betik yönergeleri:</value>
  </data>
  <data name="RefHelp" xml:space="preserve">
    <value>Belirtilen bütünleştirilmiş koda ve tüm bağımlılıklarına bir meta veri başvurusu ekleyin ör. #r "myLib.dll".</value>
  </data>
  <data name="LoadHelp" xml:space="preserve">
    <value>Belirtilen betik dosyasını yükleyip çalıştırın, ör. #load "myScript.csx".</value>
  </data>
</root>